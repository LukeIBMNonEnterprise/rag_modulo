version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    networks:
      - app-network
    command: ["/entrypoint.sh"]
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      milvus-standalone:
        condition: service_started
    environment:
      - PYTHONPATH=/app
      - COLLECTIONDB_NAME=${COLLECTIONDB_NAME}
      - COLLECTIONDB_USER=${COLLECTIONDB_USER}
      - COLLECTIONDB_PASS=${COLLECTIONDB_PASS}
      - COLLECTIONDB_HOST=postgres
      - COLLECTIONDB_PORT=${COLLECTIONDB_PORT}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./webui
      dockerfile: Dockerfile.frontend
    networks:
      - app-network
    ports:
      - "3000:80"
    depends_on:
      - backend

  milvus-standalone:
    image: milvusdb/milvus:v2.4.1
    networks:
      - app-network
    command: ["milvus", "run", "standalone"]
    volumes:
      - ./embedEtcd.yaml:/milvus/configs/embedEtcd.yaml
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    environment:
      ETCD_USE_EMBED: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 3

  postgres:
    image: postgres:13
    networks:
      - app-network
    container_name: ${COLLECTIONDB_HOST}
    environment:
      POSTGRES_DB: ${COLLECTIONDB_NAME}
      POSTGRES_USER: ${COLLECTIONDB_USER}
      POSTGRES_PASSWORD: ${COLLECTIONDB_PASS}
      COLLECTIONDB_NAME: ${COLLECTIONDB_NAME}
      COLLECTIONDB_USER: ${COLLECTIONDB_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${COLLECTIONDB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${COLLECTIONDB_USER} -d ${COLLECTIONDB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  milvus_data:

networks:
  app-network:
    driver: bridge